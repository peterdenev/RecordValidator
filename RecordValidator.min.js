!function(a,b){"function"==typeof define&&define.amd?define("RecordValidator",[],b):"object"==typeof exports?module.exports=b():a.RecordValidator=b()}(this,function(){function b(b,d){var f,e=!1,g=!0;try{if("function"!=typeof a[b])throw new Error('No implementation for parsing "'+b+'" in RecordValidator.parseImpls!');f=a[b](d)}catch(h){g=!1,console.warn("Parsing failed!",h)}return g&&(e=c(b,f)),e}function c(a,c){var f=!0;if("undefined"!=typeof c)if("string"==typeof a){var g=a.split("-"),h=h=g[g.length-1],i=-1!=g[0].indexOf("parse");f=typeof c===h,f!==!0&&(i&&(f=b(h,c)),f!==!0&&(f="Must be "+h+", but "+typeof c+" given!"))}else Array.isArray(a)?f=Array.isArray(c)?e(a,c):"is not an array":"object"==typeof a?f="object"==typeof c?d(a,c):"is not an Object":"function"==typeof a?(f=c instanceof a,f!==!0&&(f="Must be instance of "+a.name)):f=typeof a+" This record type is not implemented!";else f=" does not exits!";return f}function d(a,b){var d=!0;if(Array.isArray(a)||"object"==typeof a){for(var e in a)if(d=c(a[e],b[e]),d!==!0){d="."+e+" "+d;break}}else d=c(a,b),d!==!0&&(d=" "+d);return d}function e(a,c){var f=!0,g="";if(a=Array.isArray(a)?a:[a],1==a.length){if("string"==typeof a[0]){for(var h=0;h<c.length;h++)if(f=typeof c[h]===a[0],f!==!0&&(f=b(a[0],c[h]),f!==!0)){f="Must be "+a[0]+", but "+typeof c[h]+" given!";break}}else if(Array.isArray(a[0]))for(var h=0;h<c.length&&(f=e(a[0],c[h]),f===!0);h++);else if("object"==typeof a[0])for(var h=0;h<c.length&&(f=d(a[0],c[h]),f===!0);h++);}else for(var i=0;i<a.length;i++)if(f=d(a[i],c[i]),f!==!0){g="."+i+" ";break}return f===!0?!0:g+f}function f(a){return function(b){return d(a,b)}}var a={number:function(a){var b=parseInt(a);if((b+"").length!=a.length)throw new Error("Not all characters are numbers");if("NaN"==b)throw new Error("Not a number");return b}};return{check:d,buildChecker:f,parseImpls:a}});